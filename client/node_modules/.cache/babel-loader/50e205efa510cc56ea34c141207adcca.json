{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\repos\\\\todos-redux\\\\src\\\\components\\\\contentComponents\\\\List.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { toggle, destroy } from \"../../redux/todos/todosSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction List() {\n  _s();\n\n  const dispatch = useDispatch();\n  const items = useSelector(state => state.todos.items);\n  const activeFilter = useSelector(state => state.todos.activeFilter);\n  let filtered = [];\n\n  const handleDestroy = id => {\n    if (window.confirm(\"Are you sure you want to destroy this item?\")) {\n      dispatch(destroy(id));\n    }\n  };\n\n  filtered = items;\n\n  if (activeFilter !== \"all\") {\n    filtered = items.filter(todo => activeFilter === \"active\" ? todo.completed === false && todo : todo.completed === true && todo);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"todo-list\",\n    children: filtered.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: item.completed ? \"completed\" : \"\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"toggle\",\n          type: \"checkbox\",\n          checked: item.completed,\n          onChange: () => dispatch(toggle({\n            id: item.id\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"destroy\",\n          onClick: () => handleDestroy(item.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(List, \"4f4HGD367/mKszHRoHHk6HnTn+0=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","useSelector","useDispatch","toggle","destroy","List","dispatch","items","state","todos","activeFilter","filtered","handleDestroy","id","window","confirm","filter","todo","completed","map","item","title"],"sources":["C:/Users/dell/Desktop/repos/todos-redux/src/components/contentComponents/List.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { toggle, destroy } from \"../../redux/todos/todosSlice\";\r\n\r\nfunction List() {\r\n  const dispatch = useDispatch();\r\n  const items = useSelector((state) => state.todos.items);\r\n  const activeFilter = useSelector((state) => state.todos.activeFilter);\r\n  let filtered = [];\r\n\r\n  const handleDestroy = (id) => {\r\n    if (window.confirm(\"Are you sure you want to destroy this item?\")) {\r\n      dispatch(destroy(id));\r\n    }\r\n  };\r\n\r\n\r\n  filtered=items;\r\n  if (activeFilter !== \"all\") {\r\n    filtered = items.filter((todo) =>\r\n      activeFilter === \"active\"\r\n        ? todo.completed === false && todo\r\n        : todo.completed === true && todo\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul className=\"todo-list\">\r\n      {filtered.map((item) => (\r\n        <li key={item.id} className={item.completed ? \"completed\" : \"\"}>\r\n          <div className=\"view\">\r\n            <input\r\n              className=\"toggle\"\r\n              type=\"checkbox\"\r\n              checked={item.completed}\r\n              onChange={() => dispatch(toggle({ id: item.id }))}\r\n            />\r\n            <label>{item.title}</label>\r\n            <button\r\n              className=\"destroy\"\r\n              onClick={() => handleDestroy(item.id)}\r\n            />\r\n          </div>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default List;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,8BAAhC;;;AAEA,SAASC,IAAT,GAAgB;EAAA;;EACd,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B;EACA,MAAMK,KAAK,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYF,KAAxB,CAAzB;EACA,MAAMG,YAAY,GAAGT,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,YAAxB,CAAhC;EACA,IAAIC,QAAQ,GAAG,EAAf;;EAEA,MAAMC,aAAa,GAAIC,EAAD,IAAQ;IAC5B,IAAIC,MAAM,CAACC,OAAP,CAAe,6CAAf,CAAJ,EAAmE;MACjET,QAAQ,CAACF,OAAO,CAACS,EAAD,CAAR,CAAR;IACD;EACF,CAJD;;EAOAF,QAAQ,GAACJ,KAAT;;EACA,IAAIG,YAAY,KAAK,KAArB,EAA4B;IAC1BC,QAAQ,GAAGJ,KAAK,CAACS,MAAN,CAAcC,IAAD,IACtBP,YAAY,KAAK,QAAjB,GACIO,IAAI,CAACC,SAAL,KAAmB,KAAnB,IAA4BD,IADhC,GAEIA,IAAI,CAACC,SAAL,KAAmB,IAAnB,IAA2BD,IAHtB,CAAX;EAKD;;EAED,oBACE;IAAI,SAAS,EAAC,WAAd;IAAA,UACGN,QAAQ,CAACQ,GAAT,CAAcC,IAAD,iBACZ;MAAkB,SAAS,EAAEA,IAAI,CAACF,SAAL,GAAiB,WAAjB,GAA+B,EAA5D;MAAA,uBACE;QAAK,SAAS,EAAC,MAAf;QAAA,wBACE;UACE,SAAS,EAAC,QADZ;UAEE,IAAI,EAAC,UAFP;UAGE,OAAO,EAAEE,IAAI,CAACF,SAHhB;UAIE,QAAQ,EAAE,MAAMZ,QAAQ,CAACH,MAAM,CAAC;YAAEU,EAAE,EAAEO,IAAI,CAACP;UAAX,CAAD,CAAP;QAJ1B;UAAA;UAAA;UAAA;QAAA,QADF,eAOE;UAAA,UAAQO,IAAI,CAACC;QAAb;UAAA;UAAA;UAAA;QAAA,QAPF,eAQE;UACE,SAAS,EAAC,SADZ;UAEE,OAAO,EAAE,MAAMT,aAAa,CAACQ,IAAI,CAACP,EAAN;QAF9B;UAAA;UAAA;UAAA;QAAA,QARF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF,GAASO,IAAI,CAACP,EAAd;MAAA;MAAA;MAAA;IAAA,QADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAqBD;;GA3CQR,I;UACUH,W,EACHD,W,EACOA,W;;;KAHdI,I;AA6CT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}